{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelli/Desktop/the-roast/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/michaelli/Desktop/the-roast/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar readFromBlobOrFile = function readFromBlobOrFile(blob) {\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = function (_ref) {\n      var code = _ref.target.error.code;\n      reject(Error(\"File could not be read! Code=\".concat(code)));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  });\n};\n\n// eslint-disable-next-line\nexport var fetchFile = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_data) {\n    var data, res;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          data = _data;\n          if (!(typeof _data === 'undefined')) {\n            _context.next = 3;\n            break;\n          }\n          return _context.abrupt(\"return\", new Uint8Array());\n        case 3:\n          if (!(typeof _data === 'string')) {\n            _context.next = 16;\n            break;\n          }\n          if (!/data:_data\\/([a-zA-Z]*);base64,([^\"]*)/.test(_data)) {\n            _context.next = 8;\n            break;\n          }\n          data = atob(_data.split(',')[1]).split('').map(function (c) {\n            return c.charCodeAt(0);\n          });\n          /* From remote server/URL */\n          _context.next = 14;\n          break;\n        case 8:\n          _context.next = 10;\n          return fetch(new URL(_data, import.meta.url).href);\n        case 10:\n          res = _context.sent;\n          _context.next = 13;\n          return res.arrayBuffer();\n        case 13:\n          data = _context.sent;\n        case 14:\n          _context.next = 20;\n          break;\n        case 16:\n          if (!(_data instanceof File || _data instanceof Blob)) {\n            _context.next = 20;\n            break;\n          }\n          _context.next = 19;\n          return readFromBlobOrFile(_data);\n        case 19:\n          data = _context.sent;\n        case 20:\n          return _context.abrupt(\"return\", new Uint8Array(data));\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function fetchFile(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["readFromBlobOrFile","blob","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","_ref","code","target","error","Error","concat","readAsArrayBuffer","fetchFile","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data","data","res","wrap","_callee$","_context","prev","next","abrupt","Uint8Array","test","atob","split","map","c","charCodeAt","fetch","URL","import","meta","url","href","sent","arrayBuffer","File","Blob","stop","_x","apply","arguments"],"sources":["/Users/michaelli/Desktop/the-roast/frontend/node_modules/@ffmpeg/ffmpeg/src/browser/fetchFile.js"],"sourcesContent":["const readFromBlobOrFile = (blob) => (\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = ({ target: { error: { code } } }) => {\n      reject(Error(`File could not be read! Code=${code}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  })\n);\n\n// eslint-disable-next-line\nexport const fetchFile = async (_data) => {\n  let data = _data;\n  if (typeof _data === 'undefined') {\n    return new Uint8Array();\n  }\n\n  if (typeof _data === 'string') {\n    /* From base64 format */\n    if (/data:_data\\/([a-zA-Z]*);base64,([^\"]*)/.test(_data)) {\n      data = atob(_data.split(',')[1])\n        .split('')\n        .map((c) => c.charCodeAt(0));\n    /* From remote server/URL */\n    } else {\n      const res = await fetch(new URL(_data, import.meta.url).href);\n      data = await res.arrayBuffer();\n    }\n  /* From Blob or File */\n  } else if (_data instanceof File || _data instanceof Blob) {\n    data = await readFromBlobOrFile(_data);\n  }\n\n  return new Uint8Array(data);\n};\n"],"mappings":";;AAAA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,IAAI;EAAA,OAC9B,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;IAC/B,IAAMC,UAAU,GAAG,IAAIC,UAAU,CAAC,CAAC;IACnCD,UAAU,CAACE,MAAM,GAAG,YAAM;MACxBJ,OAAO,CAACE,UAAU,CAACG,MAAM,CAAC;IAC5B,CAAC;IACDH,UAAU,CAACI,OAAO,GAAG,UAAAC,IAAA,EAAqC;MAAA,IAAfC,IAAI,GAAAD,IAAA,CAAvBE,MAAM,CAAIC,KAAK,CAAIF,IAAI;MAC7CP,MAAM,CAACU,KAAK,iCAAAC,MAAA,CAAiCJ,IAAI,CAAE,CAAC,CAAC;IACvD,CAAC;IACDN,UAAU,CAACW,iBAAiB,CAACf,IAAI,CAAC;EACpC,CAAC,CAAC;AAAA,CACH;;AAED;AACA,OAAO,IAAMgB,SAAS;EAAA,IAAAC,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,KAAK;IAAA,IAAAC,IAAA,EAAAC,GAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAC/BN,IAAI,GAAGD,KAAK;UAAA,MACZ,OAAOA,KAAK,KAAK,WAAW;YAAAK,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAG,MAAA,WACvB,IAAIC,UAAU,CAAC,CAAC;QAAA;UAAA,MAGrB,OAAOT,KAAK,KAAK,QAAQ;YAAAK,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,KAEvB,wCAAwC,CAACG,IAAI,CAACV,KAAK,CAAC;YAAAK,QAAA,CAAAE,IAAA;YAAA;UAAA;UACtDN,IAAI,GAAGU,IAAI,CAACX,KAAK,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7BA,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAC,UAACC,CAAC;YAAA,OAAKA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC;UAAA,EAAC;UAChC;UAAAV,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAEoBS,KAAK,CAAC,IAAIC,GAAG,CAACjB,KAAK,EAAEkB,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAA;UAAvDnB,GAAG,GAAAG,QAAA,CAAAiB,IAAA;UAAAjB,QAAA,CAAAE,IAAA;UAAA,OACIL,GAAG,CAACqB,WAAW,CAAC,CAAC;QAAA;UAA9BtB,IAAI,GAAAI,QAAA,CAAAiB,IAAA;QAAA;UAAAjB,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAA,MAGGP,KAAK,YAAYwB,IAAI,IAAIxB,KAAK,YAAYyB,IAAI;YAAApB,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAC1C9B,kBAAkB,CAACuB,KAAK,CAAC;QAAA;UAAtCC,IAAI,GAAAI,QAAA,CAAAiB,IAAA;QAAA;UAAA,OAAAjB,QAAA,CAAAG,MAAA,WAGC,IAAIC,UAAU,CAACR,IAAI,CAAC;QAAA;QAAA;UAAA,OAAAI,QAAA,CAAAqB,IAAA;MAAA;IAAA,GAAA3B,OAAA;EAAA,CAC5B;EAAA,gBAvBYL,SAASA,CAAAiC,EAAA;IAAA,OAAAhC,KAAA,CAAAiC,KAAA,OAAAC,SAAA;EAAA;AAAA,GAuBrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}