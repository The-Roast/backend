{"ast":null,"code":"var _jsxFileName = \"/Users/michaelli/Desktop/the-roast/frontend/src/Pages/Conversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useWhisper } from \"@chengsokdara/use-whisper\";\nimport \"./styles/Conversation.css\";\nimport XI_API_KEY from \"../Config\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Conversation(_ref) {\n  _s();\n  let {\n    setIsSignedIn\n  } = _ref;\n  const [isRecording, setIsRecording] = useState(false);\n  const [showResponse, setShowResponse] = useState(false);\n  const [response, setResponse] = useState(\"\");\n  const {\n    state\n  } = useLocation();\n  const {\n    newsletter\n  } = state;\n  useEffect(() => {\n    setIsSignedIn(true);\n  }, []);\n  const [newsIndex, setNewsIndex] = useState(0);\n  const [audioUrl, setAudioUrl] = useState(\"\");\n  const audioRef = useRef(null);\n  const sections = Object.entries(newsletter).filter(_ref2 => {\n    let [key] = _ref2;\n    return key !== \"introduction\" && key !== \"conclusion\" && key !== \"title\";\n  });\n  const [messages, setMessages] = useState([]);\n  const handleUserMessage = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      const userInput = e.target.value.trim();\n      if (userInput !== \"\") {\n        setMessages(prevMessages => [...prevMessages, {\n          content: userInput,\n          sender: \"user\"\n        }]);\n        e.target.value = \"\";\n        setTimeout(() => {\n          const botResponse = getBotResponse(userInput);\n          setMessages(prevMessages => [...prevMessages, {\n            content: botResponse,\n            sender: \"bot\"\n          }]);\n        }, 800); // Add a slight delay to the bot response\n      }\n    }\n  };\n\n  const handleGenerateTTS = () => {\n    const {\n      title,\n      introduction,\n      ...sections\n    } = newsletter;\n\n    // const sectionText = `${introduction}\\n${Object.values(sections).join(\n    // \t\"\\n\"\n    // )}\\n${newsletter[\"conclusion\"]}`;\n\n    fetchAudio(introduction);\n  };\n  const getBotResponse = userInput => {\n    // Hardcoded array of bot responses\n    const botResponses = [\"Hello! How can I assist you today? If you have any questions or need help with our products, feel free to ask.\", \"I apologize for the inconvenience. Can you please provide more details? Our team is committed to resolving any issues you may be facing.\", \"Thank you for your inquiry. Our team will get back to you shortly. In the meantime, please let me know if there is anything else I can assist you with.\", \"I understand your concern, but I'm sorry, I cannot provide that information at the moment. We are continuously working to improve our services and expand our knowledge base.\", \"Please try again later. Our systems are currently undergoing maintenance, and we expect to be back up shortly. We appreciate your patience and understanding.\"\n    // Add more bot responses here\n    ];\n\n    const randomIndex = Math.floor(Math.random() * botResponses.length);\n    return botResponses[randomIndex];\n  };\n  const fetchAudio = async text => {\n    console.log(\"Fetching audio!\");\n    const response = await fetch(\"https://api.elevenlabs.io/v1/text-to-speech/cjlys0iHziXap7q8d4rh?optimize_streaming_latency=0\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"xi-api-key\": \"8b9914b4a9e536a1f236e02385f55df9\",\n        accept: \"audio/mpeg\"\n      },\n      body: JSON.stringify({\n        text: text,\n        model_id: \"eleven_monolingual_v1\",\n        voice_settings: {\n          stability: 0.75,\n          similarity_boost: 0\n        }\n      }),\n      responseType: \"blob\"\n    });\n    if (response.status === 200) {\n      console.log(response.body);\n      const blob = response.blob();\n      const audioUrl = new Audio(URL.createObjectURL(blob));\n      setAudioUrl(audioUrl);\n    } else {\n      console.log(\"Error: Unable to stream audio.\");\n    }\n  };\n  const renderContent = content => {\n    const pattern = /<a>(.*?)<\\/a>/g;\n    const matches = content.match(pattern);\n    if (matches) {\n      matches.forEach(match => {\n        const htmlTag = match.replace(/<\\/?a>/g, \"\");\n        content = content.replace(match, htmlTag);\n      });\n    }\n    return content;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"generate-button\",\n        onClick: () => handleGenerateTTS(),\n        children: \"Generate TTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: audioUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Daily Digest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: newsletter[\"introduction\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), sections.map((_ref3, index) => {\n        let [key, value] = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 7\n          }, this), value.split(\"\\n\").map((e, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            dangerouslySetInnerHTML: {\n              __html: renderContent(e)\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 8\n          }, this))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Conclusion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: newsletter[\"conclusion\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 3\n  }, this);\n}\n_s(Conversation, \"V8nm1sGWkNHZL9yxOclTyeJXPwE=\", false, function () {\n  return [useLocation];\n});\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useWhisper","XI_API_KEY","useLocation","jsxDEV","_jsxDEV","Conversation","_ref","_s","setIsSignedIn","isRecording","setIsRecording","showResponse","setShowResponse","response","setResponse","state","newsletter","newsIndex","setNewsIndex","audioUrl","setAudioUrl","audioRef","sections","Object","entries","filter","_ref2","key","messages","setMessages","handleUserMessage","e","preventDefault","userInput","target","value","trim","prevMessages","content","sender","setTimeout","botResponse","getBotResponse","handleGenerateTTS","title","introduction","fetchAudio","botResponses","randomIndex","Math","floor","random","length","text","console","log","fetch","method","headers","accept","body","JSON","stringify","model_id","voice_settings","stability","similarity_boost","responseType","status","blob","Audio","URL","createObjectURL","renderContent","pattern","matches","match","forEach","htmlTag","replace","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","controls","src","map","_ref3","index","split","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/michaelli/Desktop/the-roast/frontend/src/Pages/Conversation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useWhisper } from \"@chengsokdara/use-whisper\";\nimport \"./styles/Conversation.css\";\nimport XI_API_KEY from \"../Config\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction Conversation({ setIsSignedIn }) {\n\tconst [isRecording, setIsRecording] = useState(false);\n\tconst [showResponse, setShowResponse] = useState(false);\n\tconst [response, setResponse] = useState(\"\");\n\n\tconst { state } = useLocation();\n\tconst { newsletter } = state;\n\tuseEffect(() => {\n\t\tsetIsSignedIn(true);\n\t}, []);\n\n\tconst [newsIndex, setNewsIndex] = useState(0);\n\tconst [audioUrl, setAudioUrl] = useState(\"\");\n\tconst audioRef = useRef(null);\n\n\tconst sections = Object.entries(newsletter).filter(\n\t\t([key]) => key !== \"introduction\" && key !== \"conclusion\" && key !== \"title\"\n\t);\n\n\tconst [messages, setMessages] = useState([]);\n\n\tconst handleUserMessage = (e) => {\n\t\tif (e.key === \"Enter\") {\n\t\t\te.preventDefault();\n\t\t\tconst userInput = e.target.value.trim();\n\t\t\tif (userInput !== \"\") {\n\t\t\t\tsetMessages((prevMessages) => [\n\t\t\t\t\t...prevMessages,\n\t\t\t\t\t{ content: userInput, sender: \"user\" },\n\t\t\t\t]);\n\t\t\t\te.target.value = \"\";\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst botResponse = getBotResponse(userInput);\n\t\t\t\t\tsetMessages((prevMessages) => [\n\t\t\t\t\t\t...prevMessages,\n\t\t\t\t\t\t{ content: botResponse, sender: \"bot\" },\n\t\t\t\t\t]);\n\t\t\t\t}, 800); // Add a slight delay to the bot response\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleGenerateTTS = () => {\n\t\tconst { title, introduction, ...sections } = newsletter;\n\n\t\t// const sectionText = `${introduction}\\n${Object.values(sections).join(\n\t\t// \t\"\\n\"\n\t\t// )}\\n${newsletter[\"conclusion\"]}`;\n\n\t\tfetchAudio(introduction);\n\t};\n\n\tconst getBotResponse = (userInput) => {\n\t\t// Hardcoded array of bot responses\n\t\tconst botResponses = [\n\t\t\t\"Hello! How can I assist you today? If you have any questions or need help with our products, feel free to ask.\",\n\t\t\t\"I apologize for the inconvenience. Can you please provide more details? Our team is committed to resolving any issues you may be facing.\",\n\t\t\t\"Thank you for your inquiry. Our team will get back to you shortly. In the meantime, please let me know if there is anything else I can assist you with.\",\n\t\t\t\"I understand your concern, but I'm sorry, I cannot provide that information at the moment. We are continuously working to improve our services and expand our knowledge base.\",\n\t\t\t\"Please try again later. Our systems are currently undergoing maintenance, and we expect to be back up shortly. We appreciate your patience and understanding.\",\n\t\t\t// Add more bot responses here\n\t\t];\n\t\tconst randomIndex = Math.floor(Math.random() * botResponses.length);\n\t\treturn botResponses[randomIndex];\n\t};\n\n\tconst fetchAudio = async (text) => {\n\t\tconsole.log(\"Fetching audio!\");\n\t\tconst response = await fetch(\n\t\t\t\"https://api.elevenlabs.io/v1/text-to-speech/cjlys0iHziXap7q8d4rh?optimize_streaming_latency=0\",\n\t\t\t{\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"xi-api-key\": \"8b9914b4a9e536a1f236e02385f55df9\",\n\t\t\t\t\taccept: \"audio/mpeg\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\ttext: text,\n\t\t\t\t\tmodel_id: \"eleven_monolingual_v1\",\n\t\t\t\t\tvoice_settings: {\n\t\t\t\t\t\tstability: 0.75,\n\t\t\t\t\t\tsimilarity_boost: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tresponseType: \"blob\",\n\t\t\t}\n\t\t);\n\t\tif (response.status === 200) {\n\t\t\tconsole.log(response.body);\n\t\t\tconst blob = response.blob();\n\t\t\tconst audioUrl = new Audio(URL.createObjectURL(blob));\n\t\t\tsetAudioUrl(audioUrl);\n\t\t} else {\n\t\t\tconsole.log(\"Error: Unable to stream audio.\");\n\t\t}\n\t};\n\n\tconst renderContent = (content) => {\n\t\tconst pattern = /<a>(.*?)<\\/a>/g;\n\t\tconst matches = content.match(pattern);\n\t\tif (matches) {\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tconst htmlTag = match.replace(/<\\/?a>/g, \"\");\n\t\t\t\tcontent = content.replace(match, htmlTag);\n\t\t\t});\n\t\t}\n\t\treturn content;\n\t};\n\n\treturn (\n\t\t<div className=\"conversation-wrapper\">\n\t\t\t<div className=\"left-view\">\n\t\t\t\t<button className=\"generate-button\" onClick={() => handleGenerateTTS()}>\n\t\t\t\t\tGenerate TTS\n\t\t\t\t</button>\n\t\t\t\t<audio ref={audioRef} controls>\n\t\t\t\t\t<source src={audioUrl} />\n\t\t\t\t</audio>\n\t\t\t\t<h1>My Daily Digest</h1>\n\t\t\t\t<p>{newsletter[\"introduction\"]}</p>\n\t\t\t\t{sections.map(([key, value], index) => (\n\t\t\t\t\t<div key={key}>\n\t\t\t\t\t\t<h2>{key}</h2>\n\t\t\t\t\t\t{value.split(\"\\n\").map((e, index) => (\n\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: renderContent(e) }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\n\t\t\t\t<h1>Conclusion</h1>\n\t\t\t\t<p>{newsletter[\"conclusion\"]}</p>\n\t\t\t</div>\n\t\t\t{/* <div className=\"right-view\">\n\t\t\t\t<div className=\"notepad\">\n\t\t\t\t\t<div className=\"chat-messages\">\n\t\t\t\t\t\t{messages.map((message, index) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName={`message ${\n\t\t\t\t\t\t\t\t\tmessage.sender === \"user\" ? \"user\" : \"bot\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{message.content}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"message-input\"\n\t\t\t\t\t\tplaceholder=\"Type your message...\"\n\t\t\t\t\t\tonKeyDown={handleUserMessage}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div> */}\n\t\t</div>\n\t);\n}\n\nexport default Conversation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}