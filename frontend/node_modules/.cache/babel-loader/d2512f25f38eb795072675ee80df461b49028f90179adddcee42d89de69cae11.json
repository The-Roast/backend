{"ast":null,"code":"var _jsxFileName = \"/Users/michaelli/Desktop/the-roast/frontend/src/Components/Loading.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loading = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    let frameId;\n    const container = containerRef.current;\n\n    // Set up the scene\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Create the geometry (bean shape)\n    const geometry = new THREE.TorusKnotGeometry(1, 0.4, 128, 32);\n\n    // Create the material (bean color)\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffa500\n    });\n\n    // Create the mesh (combine geometry and material)\n    const mesh = new THREE.Mesh(geometry, material);\n\n    // Add the mesh to the scene\n    scene.add(mesh);\n\n    // Set up the renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(container.clientWidth, container.clientHeight);\n    container.appendChild(renderer.domElement);\n\n    // Animation loop\n    const animate = () => {\n      frameId = requestAnimationFrame(animate);\n\n      // Rotate the mesh\n      mesh.rotation.x += 0.01;\n      mesh.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    // Start the animation loop\n    animate();\n\n    // Clean up on unmount\n    return () => {\n      cancelAnimationFrame(frameId);\n      container.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Loading, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = Loading;\nexport default Loading;\nvar _c;\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","Loading","_s","containerRef","frameId","container","current","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","position","z","geometry","TorusKnotGeometry","material","MeshBasicMaterial","color","mesh","Mesh","add","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","animate","requestAnimationFrame","rotation","x","y","render","cancelAnimationFrame","removeChild","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelli/Desktop/the-roast/frontend/src/Components/Loading.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\n\nconst Loading = () => {\n\tconst containerRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tlet frameId;\n\t\tconst container = containerRef.current;\n\n\t\t// Set up the scene\n\t\tconst scene = new THREE.Scene();\n\t\tconst camera = new THREE.PerspectiveCamera(\n\t\t\t75,\n\t\t\tcontainer.clientWidth / container.clientHeight,\n\t\t\t0.1,\n\t\t\t1000\n\t\t);\n\t\tcamera.position.z = 5;\n\n\t\t// Create the geometry (bean shape)\n\t\tconst geometry = new THREE.TorusKnotGeometry(1, 0.4, 128, 32);\n\n\t\t// Create the material (bean color)\n\t\tconst material = new THREE.MeshBasicMaterial({ color: 0xffa500 });\n\n\t\t// Create the mesh (combine geometry and material)\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\t// Add the mesh to the scene\n\t\tscene.add(mesh);\n\n\t\t// Set up the renderer\n\t\tconst renderer = new THREE.WebGLRenderer({ antialias: true });\n\t\trenderer.setSize(container.clientWidth, container.clientHeight);\n\t\tcontainer.appendChild(renderer.domElement);\n\n\t\t// Animation loop\n\t\tconst animate = () => {\n\t\t\tframeId = requestAnimationFrame(animate);\n\n\t\t\t// Rotate the mesh\n\t\t\tmesh.rotation.x += 0.01;\n\t\t\tmesh.rotation.y += 0.01;\n\n\t\t\trenderer.render(scene, camera);\n\t\t};\n\n\t\t// Start the animation loop\n\t\tanimate();\n\n\t\t// Clean up on unmount\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(frameId);\n\t\t\tcontainer.removeChild(renderer.domElement);\n\t\t};\n\t}, []);\n\n\treturn <div className=\"loading-container\" ref={containerRef}></div>;\n};\n\nexport default Loading;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,YAAY,GAAGN,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACf,IAAIQ,OAAO;IACX,MAAMC,SAAS,GAAGF,YAAY,CAACG,OAAO;;IAEtC;IACA,MAAMC,KAAK,GAAG,IAAIT,KAAK,CAACU,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIX,KAAK,CAACY,iBAAiB,CACzC,EAAE,EACFL,SAAS,CAACM,WAAW,GAAGN,SAAS,CAACO,YAAY,EAC9C,GAAG,EACH,IACD,CAAC;IACDH,MAAM,CAACI,QAAQ,CAACC,CAAC,GAAG,CAAC;;IAErB;IACA,MAAMC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,iBAAiB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;;IAE7D;IACA,MAAMC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;;IAEjE;IACA,MAAMC,IAAI,GAAG,IAAItB,KAAK,CAACuB,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;;IAE/C;IACAV,KAAK,CAACe,GAAG,CAACF,IAAI,CAAC;;IAEf;IACA,MAAMG,QAAQ,GAAG,IAAIzB,KAAK,CAAC0B,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC7DF,QAAQ,CAACG,OAAO,CAACrB,SAAS,CAACM,WAAW,EAAEN,SAAS,CAACO,YAAY,CAAC;IAC/DP,SAAS,CAACsB,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;;IAE1C;IACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACrBzB,OAAO,GAAG0B,qBAAqB,CAACD,OAAO,CAAC;;MAExC;MACAT,IAAI,CAACW,QAAQ,CAACC,CAAC,IAAI,IAAI;MACvBZ,IAAI,CAACW,QAAQ,CAACE,CAAC,IAAI,IAAI;MAEvBV,QAAQ,CAACW,MAAM,CAAC3B,KAAK,EAAEE,MAAM,CAAC;IAC/B,CAAC;;IAED;IACAoB,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACZM,oBAAoB,CAAC/B,OAAO,CAAC;MAC7BC,SAAS,CAAC+B,WAAW,CAACb,QAAQ,CAACK,UAAU,CAAC;IAC3C,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO5B,OAAA;IAAKqC,SAAS,EAAC,mBAAmB;IAACC,GAAG,EAAEnC;EAAa;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpE,CAAC;AAACxC,EAAA,CAxDID,OAAO;AAAA0C,EAAA,GAAP1C,OAAO;AA0Db,eAAeA,OAAO;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}