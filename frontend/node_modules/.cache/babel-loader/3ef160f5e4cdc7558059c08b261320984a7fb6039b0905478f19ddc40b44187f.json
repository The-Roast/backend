{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelli/Desktop/the-roast/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/michaelli/Desktop/the-roast/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/* eslint-disable no-undef */\nimport { log } from '../utils/log';\nimport { CREATE_FFMPEG_CORE_IS_NOT_DEFINED } from '../utils/errors';\n\n/*\n * Fetch data from remote URL and convert to blob URL\n * to avoid CORS issue\n */\nvar toBlobURL = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url, mimeType) {\n    var buf, blob, blobURL;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          log('info', \"fetch \".concat(url));\n          _context.next = 3;\n          return fetch(url);\n        case 3:\n          _context.next = 5;\n          return _context.sent.arrayBuffer();\n        case 5:\n          buf = _context.sent;\n          log('info', \"\".concat(url, \" file size = \").concat(buf.byteLength, \" bytes\"));\n          blob = new Blob([buf], {\n            type: mimeType\n          });\n          blobURL = URL.createObjectURL(blob);\n          log('info', \"\".concat(url, \" blob URL = \").concat(blobURL));\n          return _context.abrupt(\"return\", blobURL);\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function toBlobURL(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// eslint-disable-next-line\nexport var getCreateFFmpegCore = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref2) {\n    var _corePath, _workerPath, _wasmPath, _coreRemotePath, _corePath2, _wasmPath2, _workerPath2, coreRemotePath, corePath, wasmPath, workerPath;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _corePath = _ref2.corePath, _workerPath = _ref2.workerPath, _wasmPath = _ref2.wasmPath;\n          if (!(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)) {\n            _context2.next = 18;\n            break;\n          }\n          if (!(typeof _corePath !== 'string')) {\n            _context2.next = 4;\n            break;\n          }\n          throw Error('corePath should be a string!');\n        case 4:\n          _coreRemotePath = new URL(_corePath, import.meta.url).href;\n          _context2.next = 7;\n          return toBlobURL(_coreRemotePath, 'application/javascript');\n        case 7:\n          _corePath2 = _context2.sent;\n          _context2.next = 10;\n          return toBlobURL(_wasmPath !== undefined ? _wasmPath : _coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.wasm'), 'application/wasm');\n        case 10:\n          _wasmPath2 = _context2.sent;\n          _context2.next = 13;\n          return toBlobURL(_workerPath !== undefined ? _workerPath : _coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.worker.js'), 'application/javascript');\n        case 13:\n          _workerPath2 = _context2.sent;\n          if (!(typeof createFFmpegCore === 'undefined')) {\n            _context2.next = 16;\n            break;\n          }\n          return _context2.abrupt(\"return\", new Promise(function (resolve) {\n            globalThis.importScripts(_corePath2);\n            if (typeof createFFmpegCore === 'undefined') {\n              throw Error(CREATE_FFMPEG_CORE_IS_NOT_DEFINED(_coreRemotePath));\n            }\n            log('info', 'ffmpeg-core.js script loaded');\n            resolve({\n              createFFmpegCore: createFFmpegCore,\n              corePath: _corePath2,\n              wasmPath: _wasmPath2,\n              workerPath: _workerPath2\n            });\n          }));\n        case 16:\n          log('info', 'ffmpeg-core.js script is loaded already');\n          return _context2.abrupt(\"return\", Promise.resolve({\n            createFFmpegCore: createFFmpegCore,\n            corePath: _corePath2,\n            wasmPath: _wasmPath2,\n            workerPath: _workerPath2\n          }));\n        case 18:\n          if (!(typeof _corePath !== 'string')) {\n            _context2.next = 20;\n            break;\n          }\n          throw Error('corePath should be a string!');\n        case 20:\n          coreRemotePath = new URL(_corePath, import.meta.url).href;\n          _context2.next = 23;\n          return toBlobURL(coreRemotePath, 'application/javascript');\n        case 23:\n          corePath = _context2.sent;\n          _context2.next = 26;\n          return toBlobURL(_wasmPath !== undefined ? _wasmPath : coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.wasm'), 'application/wasm');\n        case 26:\n          wasmPath = _context2.sent;\n          _context2.next = 29;\n          return toBlobURL(_workerPath !== undefined ? _workerPath : coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.worker.js'), 'application/javascript');\n        case 29:\n          workerPath = _context2.sent;\n          if (!(typeof createFFmpegCore === 'undefined')) {\n            _context2.next = 32;\n            break;\n          }\n          return _context2.abrupt(\"return\", new Promise(function (resolve) {\n            var script = document.createElement('script');\n            var eventHandler = function eventHandler() {\n              script.removeEventListener('load', eventHandler);\n              if (typeof createFFmpegCore === 'undefined') {\n                throw Error(CREATE_FFMPEG_CORE_IS_NOT_DEFINED(coreRemotePath));\n              }\n              log('info', 'ffmpeg-core.js script loaded');\n              resolve({\n                createFFmpegCore: createFFmpegCore,\n                corePath: corePath,\n                wasmPath: wasmPath,\n                workerPath: workerPath\n              });\n            };\n            script.src = corePath;\n            script.type = 'text/javascript';\n            script.addEventListener('load', eventHandler);\n            document.getElementsByTagName('head')[0].appendChild(script);\n          }));\n        case 32:\n          log('info', 'ffmpeg-core.js script is loaded already');\n          return _context2.abrupt(\"return\", Promise.resolve({\n            createFFmpegCore: createFFmpegCore,\n            corePath: corePath,\n            wasmPath: wasmPath,\n            workerPath: workerPath\n          }));\n        case 34:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function getCreateFFmpegCore(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["log","CREATE_FFMPEG_CORE_IS_NOT_DEFINED","toBlobURL","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","mimeType","buf","blob","blobURL","wrap","_callee$","_context","prev","next","concat","fetch","sent","arrayBuffer","byteLength","Blob","type","URL","createObjectURL","abrupt","stop","_x","_x2","apply","arguments","getCreateFFmpegCore","_ref3","_callee2","_ref2","_corePath","_workerPath","_wasmPath","_coreRemotePath","_corePath2","_wasmPath2","_workerPath2","coreRemotePath","corePath","wasmPath","workerPath","_callee2$","_context2","WorkerGlobalScope","self","Error","import","meta","href","undefined","replace","createFFmpegCore","Promise","resolve","globalThis","importScripts","script","document","createElement","eventHandler","removeEventListener","src","addEventListener","getElementsByTagName","appendChild","_x3"],"sources":["/Users/michaelli/Desktop/the-roast/frontend/node_modules/@ffmpeg/ffmpeg/src/browser/getCreateFFmpegCore.js"],"sourcesContent":["/* eslint-disable no-undef */\nimport { log } from '../utils/log';\nimport {\n  CREATE_FFMPEG_CORE_IS_NOT_DEFINED,\n} from '../utils/errors';\n\n/*\n * Fetch data from remote URL and convert to blob URL\n * to avoid CORS issue\n */\nconst toBlobURL = async (url, mimeType) => {\n  log('info', `fetch ${url}`);\n  const buf = await (await fetch(url)).arrayBuffer();\n  log('info', `${url} file size = ${buf.byteLength} bytes`);\n  const blob = new Blob([buf], { type: mimeType });\n  const blobURL = URL.createObjectURL(blob);\n  log('info', `${url} blob URL = ${blobURL}`);\n  return blobURL;\n};\n\n// eslint-disable-next-line\nexport const getCreateFFmpegCore = async ({\n  corePath: _corePath,\n  workerPath: _workerPath,\n  wasmPath: _wasmPath,\n}) => {\n  // in Web Worker context\n  // eslint-disable-next-line\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n    if (typeof _corePath !== 'string') {\n      throw Error('corePath should be a string!');\n    }\n    const coreRemotePath = new URL(_corePath, import.meta.url).href;\n    const corePath = await toBlobURL(\n      coreRemotePath,\n      'application/javascript',\n    );\n    const wasmPath = await toBlobURL(\n      _wasmPath !== undefined ? _wasmPath : coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.wasm'),\n      'application/wasm',\n    );\n    const workerPath = await toBlobURL(\n      _workerPath !== undefined ? _workerPath : coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.worker.js'),\n      'application/javascript',\n    );\n    if (typeof createFFmpegCore === 'undefined') {\n      return new Promise((resolve) => {\n        globalThis.importScripts(corePath);\n        if (typeof createFFmpegCore === 'undefined') {\n          throw Error(CREATE_FFMPEG_CORE_IS_NOT_DEFINED(coreRemotePath));\n        }\n        log('info', 'ffmpeg-core.js script loaded');\n        resolve({\n          createFFmpegCore,\n          corePath,\n          wasmPath,\n          workerPath,\n        });\n      });\n    }\n    log('info', 'ffmpeg-core.js script is loaded already');\n    return Promise.resolve({\n      createFFmpegCore,\n      corePath,\n      wasmPath,\n      workerPath,\n    });\n  }\n  if (typeof _corePath !== 'string') {\n    throw Error('corePath should be a string!');\n  }\n  const coreRemotePath = new URL(_corePath, import.meta.url).href;\n  const corePath = await toBlobURL(\n    coreRemotePath,\n    'application/javascript',\n  );\n  const wasmPath = await toBlobURL(\n    _wasmPath !== undefined ? _wasmPath : coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.wasm'),\n    'application/wasm',\n  );\n  const workerPath = await toBlobURL(\n    _workerPath !== undefined ? _workerPath : coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.worker.js'),\n    'application/javascript',\n  );\n  if (typeof createFFmpegCore === 'undefined') {\n    return new Promise((resolve) => {\n      const script = document.createElement('script');\n      const eventHandler = () => {\n        script.removeEventListener('load', eventHandler);\n        if (typeof createFFmpegCore === 'undefined') {\n          throw Error(CREATE_FFMPEG_CORE_IS_NOT_DEFINED(coreRemotePath));\n        }\n        log('info', 'ffmpeg-core.js script loaded');\n        resolve({\n          createFFmpegCore,\n          corePath,\n          wasmPath,\n          workerPath,\n        });\n      };\n      script.src = corePath;\n      script.type = 'text/javascript';\n      script.addEventListener('load', eventHandler);\n      document.getElementsByTagName('head')[0].appendChild(script);\n    });\n  }\n  log('info', 'ffmpeg-core.js script is loaded already');\n  return Promise.resolve({\n    createFFmpegCore,\n    corePath,\n    wasmPath,\n    workerPath,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}