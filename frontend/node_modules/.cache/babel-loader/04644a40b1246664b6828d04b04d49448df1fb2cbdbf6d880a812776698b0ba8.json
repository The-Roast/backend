{"ast":null,"code":"import { b, c, d } from './chunk-VO7VPLVP.js';\nimport { useEffectAsync, useMemoAsync } from '@chengsokdara/react-hooks-async';\nimport { useRef, useState, useEffect } from 'react';\nvar ne = {\n    apiKey: \"\",\n    autoStart: !1,\n    autoTranscribe: !0,\n    mode: \"transcriptions\",\n    nonStop: !1,\n    removeSilence: !1,\n    stopTimeout: 5e3,\n    streaming: !1,\n    timeSlice: 1e3,\n    onDataAvailable: void 0,\n    onTranscribe: void 0\n  },\n  oe = {\n    stop: void 0\n  },\n  ae = {\n    blob: void 0,\n    text: void 0\n  },\n  ue = P => {\n    let {\n      apiKey: m,\n      autoStart: A,\n      autoTranscribe: U,\n      mode: h,\n      nonStop: B,\n      removeSilence: M,\n      stopTimeout: q,\n      streaming: S,\n      timeSlice: I,\n      whisperConfig: c$1,\n      onDataAvailable: K,\n      onTranscribe: T\n    } = {\n      ...ne,\n      ...P\n    };\n    if (!m && !T) throw new Error(\"apiKey is required if onTranscribe is not provided\");\n    let f = useRef([]),\n      i = useRef(),\n      s = useRef(),\n      t = useRef(),\n      a = useRef(),\n      d$1 = useRef(oe),\n      [O, k] = useState(!1),\n      [$, C] = useState(!1),\n      [j, g] = useState(!1),\n      [z, l] = useState(ae);\n    useEffect(() => () => {\n      f.current && (f.current = []), i.current && (i.current.flush(), i.current = void 0), t.current && (t.current.destroy(), t.current = void 0), b$1(\"stop\"), s.current && (s.current.off(\"speaking\", R), s.current.off(\"stopped_speaking\", v)), a.current && (a.current.getTracks().forEach(e => e.stop()), a.current = void 0);\n    }, []), useEffectAsync(async () => {\n      A && (await W());\n    }, [A]);\n    let N = async () => {\n        await W();\n      },\n      G = async () => {\n        await V();\n      },\n      J = async () => {\n        await E();\n      },\n      W = async () => {\n        try {\n          if (a.current || (await Q()), a.current) {\n            if (!t.current) {\n              let {\n                  default: {\n                    RecordRTCPromisesHandler: r,\n                    StereoAudioRecorder: o\n                  }\n                } = await import('recordrtc'),\n                n = {\n                  mimeType: \"audio/wav\",\n                  numberOfAudioChannels: 1,\n                  recorderType: o,\n                  sampleRate: 44100,\n                  timeSlice: S ? I : void 0,\n                  type: \"audio\",\n                  ondataavailable: U && S ? Z : void 0\n                };\n              t.current = new r(a.current, n);\n            }\n            if (!i.current) {\n              let {\n                Mp3Encoder: r\n              } = await import('lamejs');\n              i.current = new r(1, 44100, 96);\n            }\n            let e = await t.current.getState();\n            (e === \"inactive\" || e === \"stopped\") && (await t.current.startRecording()), e === \"paused\" && (await t.current.resumeRecording()), B && x(\"stop\"), k(!0);\n          }\n        } catch {}\n      },\n      Q = async () => {\n        try {\n          if (a.current && a.current.getTracks().forEach(e => e.stop()), a.current = await navigator.mediaDevices.getUserMedia({\n            audio: !0\n          }), !s.current) {\n            let {\n              default: e\n            } = await import('hark');\n            s.current = e(a.current, {\n              interval: 100,\n              play: !1\n            }), s.current.on(\"speaking\", R), s.current.on(\"stopped_speaking\", v);\n          }\n        } catch {}\n      },\n      x = e => {\n        d$1.current[e] || (d$1.current[e] = setTimeout(E, q));\n      },\n      R = () => {\n        C(!0), b$1(\"stop\");\n      },\n      v = () => {\n        C(!1), B && x(\"stop\");\n      },\n      V = async () => {\n        try {\n          t.current && ((await t.current.getState()) === \"recording\" && (await t.current.pauseRecording()), b$1(\"stop\"), k(!1));\n        } catch {}\n      },\n      E = async () => {\n        try {\n          if (t.current) {\n            let e = await t.current.getState();\n            if ((e === \"recording\" || e === \"paused\") && (await t.current.stopRecording()), X(), b$1(\"stop\"), k(!1), U) await Y();else {\n              let r = await t.current.getBlob();\n              l({\n                blob: r\n              });\n            }\n            await t.current.destroy(), f.current = [], i.current && (i.current.flush(), i.current = void 0), t.current = void 0;\n          }\n        } catch {}\n      },\n      X = () => {\n        s.current && (s.current.off(\"speaking\", R), s.current.off(\"stopped_speaking\", v), s.current = void 0), a.current && (a.current.getTracks().forEach(e => e.stop()), a.current = void 0);\n      },\n      b$1 = e => {\n        d$1.current[e] && (clearTimeout(d$1.current[e]), d$1.current[e] = void 0);\n      },\n      Y = async () => {\n        try {\n          if (i.current && t.current && (await t.current.getState()) === \"stopped\") {\n            g(!0);\n            let r = await t.current.getBlob();\n            if (M) {\n              let {\n                  createFFmpeg: o\n                } = await import('@ffmpeg/ffmpeg'),\n                n = o({\n                  mainName: \"main\",\n                  corePath: b,\n                  log: !0\n                });\n              n.isLoaded() || (await n.load());\n              let u = await r.arrayBuffer();\n              n.FS(\"writeFile\", \"in.wav\", new Uint8Array(u)), await n.run(\"-i\", \"in.wav\", \"-acodec\", \"libmp3lame\", \"-b:a\", \"96k\", \"-ar\", \"44100\", \"-af\", c, \"out.mp3\");\n              let w = n.FS(\"readFile\", \"out.mp3\");\n              if (w.length <= 225) {\n                n.exit(), l({\n                  blob: r\n                }), g(!1);\n                return;\n              }\n              r = new Blob([w.buffer], {\n                type: \"audio/mpeg\"\n              }), n.exit();\n            } else {\n              let o = await r.arrayBuffer(),\n                n = i.current.encodeBuffer(new Int16Array(o));\n              r = new Blob([n], {\n                type: \"audio/mpeg\"\n              });\n            }\n            if (typeof T == \"function\") {\n              let o = await T(r);\n              l(o);\n            } else {\n              let o = new File([r], \"speech.mp3\", {\n                  type: \"audio/mpeg\"\n                }),\n                n = await F(o);\n              l({\n                blob: r,\n                text: n\n              });\n            }\n            g(!1);\n          }\n        } catch {\n          g(!1);\n        }\n      },\n      Z = async e => {\n        try {\n          if (S && t.current) {\n            if (K?.(e), i.current) {\n              let o = await e.arrayBuffer(),\n                n = i.current.encodeBuffer(new Int16Array(o)),\n                u = new Blob([n], {\n                  type: \"audio/mpeg\"\n                });\n              f.current.push(u);\n            }\n            if ((await t.current.getState()) === \"recording\") {\n              let o = new Blob(f.current, {\n                  type: \"audio/mpeg\"\n                }),\n                n = new File([o], \"speech.mp3\", {\n                  type: \"audio/mpeg\"\n                }),\n                u = await F(n);\n              u && l(w => ({\n                ...w,\n                text: u\n              }));\n            }\n          }\n        } catch {}\n      },\n      F = useMemoAsync(async e => {\n        let r = new FormData();\n        r.append(\"file\", e), r.append(\"model\", \"whisper-1\"), h === \"transcriptions\" && r.append(\"language\", c$1?.language ?? \"en\"), c$1?.prompt && r.append(\"prompt\", c$1.prompt), c$1?.response_format && r.append(\"response_format\", c$1.response_format), c$1?.temperature && r.append(\"temperature\", `${c$1.temperature}`);\n        let o = {};\n        o[\"Content-Type\"] = \"multipart/form-data\", m && (o.Authorization = `Bearer ${m}`);\n        let {\n          default: n\n        } = await import('axios');\n        return (await n.post(d + h, r, {\n          headers: o\n        })).data.text;\n      }, [m, h, c$1]);\n    return {\n      recording: O,\n      speaking: $,\n      transcribing: j,\n      transcript: z,\n      pauseRecording: G,\n      startRecording: N,\n      stopRecording: J\n    };\n  };\nexport { ue as a };","map":{"version":3,"names":["b","c","d","useEffectAsync","useMemoAsync","useRef","useState","useEffect","ne","apiKey","autoStart","autoTranscribe","mode","nonStop","removeSilence","stopTimeout","streaming","timeSlice","onDataAvailable","onTranscribe","oe","stop","ae","blob","text","ue","P","m","A","U","h","B","M","q","S","I","whisperConfig","c$1","K","T","Error","f","i","s","t","a","d$1","O","k","$","C","j","g","z","l","current","flush","destroy","b$1","off","R","v","getTracks","forEach","e","W","N","G","V","J","E","Q","default","RecordRTCPromisesHandler","r","StereoAudioRecorder","o","n","mimeType","numberOfAudioChannels","recorderType","sampleRate","type","ondataavailable","Z","Mp3Encoder","getState","startRecording","resumeRecording","x","navigator","mediaDevices","getUserMedia","audio","interval","play","on","setTimeout","pauseRecording","stopRecording","X","Y","getBlob","clearTimeout","createFFmpeg","mainName","corePath","log","isLoaded","load","u","arrayBuffer","FS","Uint8Array","run","w","length","exit","Blob","buffer","encodeBuffer","Int16Array","File","F","push","FormData","append","language","prompt","response_format","temperature","Authorization","post","headers","data","recording","speaking","transcribing","transcript"],"sources":["/Users/michaelli/Desktop/the-roast/frontend/node_modules/@chengsokdara/use-whisper/dist/chunk-32KRFHOA.js"],"sourcesContent":["import { b, c, d } from './chunk-VO7VPLVP.js';\nimport { useEffectAsync, useMemoAsync } from '@chengsokdara/react-hooks-async';\nimport { useRef, useState, useEffect } from 'react';\n\nvar ne={apiKey:\"\",autoStart:!1,autoTranscribe:!0,mode:\"transcriptions\",nonStop:!1,removeSilence:!1,stopTimeout:5e3,streaming:!1,timeSlice:1e3,onDataAvailable:void 0,onTranscribe:void 0},oe={stop:void 0},ae={blob:void 0,text:void 0},ue=P=>{let{apiKey:m,autoStart:A,autoTranscribe:U,mode:h,nonStop:B,removeSilence:M,stopTimeout:q,streaming:S,timeSlice:I,whisperConfig:c$1,onDataAvailable:K,onTranscribe:T}={...ne,...P};if(!m&&!T)throw new Error(\"apiKey is required if onTranscribe is not provided\");let f=useRef([]),i=useRef(),s=useRef(),t=useRef(),a=useRef(),d$1=useRef(oe),[O,k]=useState(!1),[$,C]=useState(!1),[j,g]=useState(!1),[z,l]=useState(ae);useEffect(()=>()=>{f.current&&(f.current=[]),i.current&&(i.current.flush(),i.current=void 0),t.current&&(t.current.destroy(),t.current=void 0),b$1(\"stop\"),s.current&&(s.current.off(\"speaking\",R),s.current.off(\"stopped_speaking\",v)),a.current&&(a.current.getTracks().forEach(e=>e.stop()),a.current=void 0);},[]),useEffectAsync(async()=>{A&&await W();},[A]);let N=async()=>{await W();},G=async()=>{await V();},J=async()=>{await E();},W=async()=>{try{if(a.current||await Q(),a.current){if(!t.current){let{default:{RecordRTCPromisesHandler:r,StereoAudioRecorder:o}}=await import('recordrtc'),n={mimeType:\"audio/wav\",numberOfAudioChannels:1,recorderType:o,sampleRate:44100,timeSlice:S?I:void 0,type:\"audio\",ondataavailable:U&&S?Z:void 0};t.current=new r(a.current,n);}if(!i.current){let{Mp3Encoder:r}=await import('lamejs');i.current=new r(1,44100,96);}let e=await t.current.getState();(e===\"inactive\"||e===\"stopped\")&&await t.current.startRecording(),e===\"paused\"&&await t.current.resumeRecording(),B&&x(\"stop\"),k(!0);}}catch{}},Q=async()=>{try{if(a.current&&a.current.getTracks().forEach(e=>e.stop()),a.current=await navigator.mediaDevices.getUserMedia({audio:!0}),!s.current){let{default:e}=await import('hark');s.current=e(a.current,{interval:100,play:!1}),s.current.on(\"speaking\",R),s.current.on(\"stopped_speaking\",v);}}catch{}},x=e=>{d$1.current[e]||(d$1.current[e]=setTimeout(E,q));},R=()=>{C(!0),b$1(\"stop\");},v=()=>{C(!1),B&&x(\"stop\");},V=async()=>{try{t.current&&(await t.current.getState()===\"recording\"&&await t.current.pauseRecording(),b$1(\"stop\"),k(!1));}catch{}},E=async()=>{try{if(t.current){let e=await t.current.getState();if((e===\"recording\"||e===\"paused\")&&await t.current.stopRecording(),X(),b$1(\"stop\"),k(!1),U)await Y();else {let r=await t.current.getBlob();l({blob:r});}await t.current.destroy(),f.current=[],i.current&&(i.current.flush(),i.current=void 0),t.current=void 0;}}catch{}},X=()=>{s.current&&(s.current.off(\"speaking\",R),s.current.off(\"stopped_speaking\",v),s.current=void 0),a.current&&(a.current.getTracks().forEach(e=>e.stop()),a.current=void 0);},b$1=e=>{d$1.current[e]&&(clearTimeout(d$1.current[e]),d$1.current[e]=void 0);},Y=async()=>{try{if(i.current&&t.current&&await t.current.getState()===\"stopped\"){g(!0);let r=await t.current.getBlob();if(M){let{createFFmpeg:o}=await import('@ffmpeg/ffmpeg'),n=o({mainName:\"main\",corePath:b,log:!0});n.isLoaded()||await n.load();let u=await r.arrayBuffer();n.FS(\"writeFile\",\"in.wav\",new Uint8Array(u)),await n.run(\"-i\",\"in.wav\",\"-acodec\",\"libmp3lame\",\"-b:a\",\"96k\",\"-ar\",\"44100\",\"-af\",c,\"out.mp3\");let w=n.FS(\"readFile\",\"out.mp3\");if(w.length<=225){n.exit(),l({blob:r}),g(!1);return}r=new Blob([w.buffer],{type:\"audio/mpeg\"}),n.exit();}else {let o=await r.arrayBuffer(),n=i.current.encodeBuffer(new Int16Array(o));r=new Blob([n],{type:\"audio/mpeg\"});}if(typeof T==\"function\"){let o=await T(r);l(o);}else {let o=new File([r],\"speech.mp3\",{type:\"audio/mpeg\"}),n=await F(o);l({blob:r,text:n});}g(!1);}}catch{g(!1);}},Z=async e=>{try{if(S&&t.current){if(K?.(e),i.current){let o=await e.arrayBuffer(),n=i.current.encodeBuffer(new Int16Array(o)),u=new Blob([n],{type:\"audio/mpeg\"});f.current.push(u);}if(await t.current.getState()===\"recording\"){let o=new Blob(f.current,{type:\"audio/mpeg\"}),n=new File([o],\"speech.mp3\",{type:\"audio/mpeg\"}),u=await F(n);u&&l(w=>({...w,text:u}));}}}catch{}},F=useMemoAsync(async e=>{let r=new FormData;r.append(\"file\",e),r.append(\"model\",\"whisper-1\"),h===\"transcriptions\"&&r.append(\"language\",c$1?.language??\"en\"),c$1?.prompt&&r.append(\"prompt\",c$1.prompt),c$1?.response_format&&r.append(\"response_format\",c$1.response_format),c$1?.temperature&&r.append(\"temperature\",`${c$1.temperature}`);let o={};o[\"Content-Type\"]=\"multipart/form-data\",m&&(o.Authorization=`Bearer ${m}`);let{default:n}=await import('axios');return (await n.post(d+h,r,{headers:o})).data.text},[m,h,c$1]);return {recording:O,speaking:$,transcribing:j,transcript:z,pauseRecording:G,startRecording:N,stopRecording:J}};\n\nexport { ue as a };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}