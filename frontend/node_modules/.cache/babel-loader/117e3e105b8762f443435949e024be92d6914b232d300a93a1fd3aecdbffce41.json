{"ast":null,"code":"var _jsxFileName = \"/Users/michaelli/Desktop/the-roast/frontend/src/Pages/Conversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useWhisper } from \"@chengsokdara/use-whisper\";\nimport \"./styles/Conversation.css\";\nimport XI_API_KEY from \"../Config\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Conversation(_ref) {\n  _s();\n  let {\n    setIsSignedIn\n  } = _ref;\n  const [isRecording, setIsRecording] = useState(false);\n  const [showResponse, setShowResponse] = useState(false);\n  const [response, setResponse] = useState(\"\");\n  const [userTranscript, setUserTranscript] = useState([]);\n  const {\n    state\n  } = useLocation();\n  setResponse(state);\n  const {\n    startRecording,\n    stopRecording,\n    transcript\n  } = useWhisper({\n    apiKey: \"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\"\n  });\n  const botResponse = [\"Hi! How are you doing?\", \"Great to hear! What are you interested about?\", \"Sure, lot's going in the ol' Capital. The Supreme Court recently ruled on an important case! Did you hear about it?\"];\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    if (isRecording) {\n      startRecording();\n    } else {\n      stopRecording();\n      setShowResponse(true);\n      queryGPT();\n    }\n  }, [isRecording]);\n  const queryGPT = async () => {\n    // Perform the GPT query and set the response\n  };\n  const performGPTQuery = async text => {\n    // Make the API call to GPT and return the response\n    // You'll need to implement this part based on your chosen method for querying GPT\n    // if (text) {\n    // }\n    return \"\";\n  };\n  useEffect(() => {\n    if (transcript.text) {\n      if (userTranscript == [[\"Reader\", \"\"]]) {\n        setUserTranscript([[\"Reader\", transcript.text]]);\n        console.log(userTranscript);\n      } else {\n        setUserTranscript(prevState => [...prevState, [\"Reader\", transcript.text]]);\n        console.log(userTranscript);\n      }\n      const response = botResponse[index];\n      setIndex((index + 1) % 3);\n      setUserTranscript(prevState => [...prevState, [\"Bot\", response]]);\n      getBotTTS(response);\n    }\n  }, [transcript.text]);\n  function getBotTTS(text) {}\n  useEffect(() => {\n    setIsSignedIn(true);\n  }, []);\n  const [newsIndex, setNewsIndex] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-view\",\n      children: Newsletter.map((index, section) => index % 6 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-view\",\n      children: [userTranscript.map(message => /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"message\",\n        children: [message[0] + \" \", \": \", message[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"recordButton\",\n        onClick: () => {\n          setIsRecording(!isRecording);\n        },\n        children: isRecording ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n}\n_s(Conversation, \"T1G8yYsZ8hpLlnKLInA2wnnmgi4=\", false, function () {\n  return [useLocation, useWhisper];\n});\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useState","useEffect","useWhisper","XI_API_KEY","useLocation","jsxDEV","_jsxDEV","Conversation","_ref","_s","setIsSignedIn","isRecording","setIsRecording","showResponse","setShowResponse","response","setResponse","userTranscript","setUserTranscript","state","startRecording","stopRecording","transcript","apiKey","botResponse","index","setIndex","queryGPT","performGPTQuery","text","console","log","prevState","getBotTTS","newsIndex","setNewsIndex","className","children","Newsletter","map","section","fileName","_jsxFileName","lineNumber","columnNumber","message","id","onClick","_c","$RefreshReg$"],"sources":["/Users/michaelli/Desktop/the-roast/frontend/src/Pages/Conversation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useWhisper } from \"@chengsokdara/use-whisper\";\nimport \"./styles/Conversation.css\";\nimport XI_API_KEY from \"../Config\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction Conversation({ setIsSignedIn }) {\n\tconst [isRecording, setIsRecording] = useState(false);\n\tconst [showResponse, setShowResponse] = useState(false);\n\tconst [response, setResponse] = useState(\"\");\n\tconst [userTranscript, setUserTranscript] = useState([]);\n\tconst { state } = useLocation();\n\tsetResponse(state);\n\n\tconst { startRecording, stopRecording, transcript } = useWhisper({\n\t\tapiKey: \"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\",\n\t});\n\n\tconst botResponse = [\n\t\t\"Hi! How are you doing?\",\n\t\t\"Great to hear! What are you interested about?\",\n\t\t\"Sure, lot's going in the ol' Capital. The Supreme Court recently ruled on an important case! Did you hear about it?\",\n\t];\n\tconst [index, setIndex] = useState(0);\n\tuseEffect(() => {\n\t\tif (isRecording) {\n\t\t\tstartRecording();\n\t\t} else {\n\t\t\tstopRecording();\n\t\t\tsetShowResponse(true);\n\t\t\tqueryGPT();\n\t\t}\n\t}, [isRecording]);\n\n\tconst queryGPT = async () => {\n\t\t// Perform the GPT query and set the response\n\t};\n\n\tconst performGPTQuery = async (text) => {\n\t\t// Make the API call to GPT and return the response\n\t\t// You'll need to implement this part based on your chosen method for querying GPT\n\t\t// if (text) {\n\t\t// }\n\t\treturn \"\";\n\t};\n\n\tuseEffect(() => {\n\t\tif (transcript.text) {\n\t\t\tif (userTranscript == [[\"Reader\", \"\"]]) {\n\t\t\t\tsetUserTranscript([[\"Reader\", transcript.text]]);\n\t\t\t\tconsole.log(userTranscript);\n\t\t\t} else {\n\t\t\t\tsetUserTranscript((prevState) => [\n\t\t\t\t\t...prevState,\n\t\t\t\t\t[\"Reader\", transcript.text],\n\t\t\t\t]);\n\t\t\t\tconsole.log(userTranscript);\n\t\t\t}\n\t\t\tconst response = botResponse[index];\n\t\t\tsetIndex((index + 1) % 3);\n\t\t\tsetUserTranscript((prevState) => [...prevState, [\"Bot\", response]]);\n\t\t\tgetBotTTS(response);\n\t\t}\n\t}, [transcript.text]);\n\n\tfunction getBotTTS(text) {}\n\n\tuseEffect(() => {\n\t\tsetIsSignedIn(true);\n\t}, []);\n\n\tconst [newsIndex, setNewsIndex] = useState(false);\n\n\treturn (\n\t\t<div className=\"conversation-wrapper\">\n\t\t\t<div className=\"left-view\">\n\t\t\t\t{Newsletter.map((index, section) =>\n\t\t\t\t\tindex % 6 ? <h1>{section}</h1> : <p>{section}</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"right-view\">\n\t\t\t\t{userTranscript.map((message) => (\n\t\t\t\t\t<p id=\"message\">\n\t\t\t\t\t\t{message[0] + \" \"}: {message[1]}\n\t\t\t\t\t</p>\n\t\t\t\t))}\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"recordButton\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetIsRecording(!isRecording);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{isRecording ? <p>Stop</p> : <p>Start</p>}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Conversation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}