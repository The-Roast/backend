"""Initial migration (from Flask-SQLAlchemy)

Revision ID: 9c757d500529
Revises: 
Create Date: 2023-07-26 20:19:20.097604

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9c757d500529'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('article',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('authors', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('keywords', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_article_authors'), 'article', ['authors'], unique=False)
    op.create_index(op.f('ix_article_keywords'), 'article', ['keywords'], unique=False)
    op.create_index(op.f('ix_article_source'), 'article', ['source'], unique=False)
    op.create_index(op.f('ix_article_url'), 'article', ['url'], unique=False)
    op.create_index(op.f('ix_article_uuid'), 'article', ['uuid'], unique=False)
    op.create_table('user',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_uuid'), 'user', ['uuid'], unique=False)
    op.create_table('digest',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('user_uuid', sa.Uuid(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('interests', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('sources', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('personality', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_digest_is_enabled'), 'digest', ['is_enabled'], unique=False)
    op.create_index(op.f('ix_digest_uuid'), 'digest', ['uuid'], unique=False)
    op.create_table('newsletter',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('digest_uuid', sa.Uuid(), nullable=True),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('introduction', sa.String(), nullable=False),
    sa.Column('body', postgresql.ARRAY(sa.JSON()), nullable=False),
    sa.Column('conclusion', sa.String(), nullable=False),
    sa.Column('html', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['digest_uuid'], ['digest.uuid'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_newsletter_uuid'), 'newsletter', ['uuid'], unique=False)
    op.create_table('newsletter_article',
    sa.Column('newsletter', sa.Uuid(), nullable=False),
    sa.Column('article', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['article'], ['article.uuid'], ),
    sa.ForeignKeyConstraint(['newsletter'], ['newsletter.uuid'], ),
    sa.PrimaryKeyConstraint('newsletter', 'article')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('newsletter_article')
    op.drop_index(op.f('ix_newsletter_uuid'), table_name='newsletter')
    op.drop_table('newsletter')
    op.drop_index(op.f('ix_digest_uuid'), table_name='digest')
    op.drop_index(op.f('ix_digest_is_enabled'), table_name='digest')
    op.drop_table('digest')
    op.drop_index(op.f('ix_user_uuid'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_article_uuid'), table_name='article')
    op.drop_index(op.f('ix_article_url'), table_name='article')
    op.drop_index(op.f('ix_article_source'), table_name='article')
    op.drop_index(op.f('ix_article_keywords'), table_name='article')
    op.drop_index(op.f('ix_article_authors'), table_name='article')
    op.drop_table('article')
    # ### end Alembic commands ###
